name: Build Image and Deploy

on:
  push:
    branches:
      - be-release

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant Execute Permission For Gradlew
        run: chmod +x ./BE-MyCarMaster/gradlew

      - name: Build with Gradle
        run: cd ./BE-MyCarMaster && ./gradlew build

      - name: Build Docker Image
        run: |
          cd ./BE-MyCarMaster
          docker build -t softeerh5/my-car-master:latest . --build-arg PROFILE=prodì •

      - name: Log in to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image
        run: docker push softeerh5/my-car-master:latest

      - name: Prepare Deployment Files
        run: |
          cd ./BE-MyCarMaster 
          mkdir deploy
          cp appspec.yml deploy/

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Zip Deployment Files
        run: |
          cd ./BE-MyCarMaster 
          zip -r deploy.zip deploy/

      - name: Copy Files to S3
        run: |
          cd ./BE-MyCarMaster
          aws s3 cp deploy.zip s3://h5-codedeploy-script/deploy/

      - name: Deploy to AWS CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name h5-application-ec2-deploy \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name h5-application-deploy-group \
            --s3-location bucket=h5-codedeploy-script,bundleType=zip,key=deploy/deploy.zip
